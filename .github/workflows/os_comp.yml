name: Test

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        os:
          - 'ubuntu-20.04'
        python-version:
          - '3.8'
        arch:
          - 'x86_64'
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Run tests
      # All environment variables are stored inside the docker image in /ci/env_vars.sh
      # They are defined in the `env` section in each image.json. CI_ARGS should be set
      # via the `args` array ub the image.json
      run:  sudo apt-get update && sudo apt-get -y install python3.8 curl git
            sudo ln -fs /usr/share/zoneinfo/America/New_York /etc/localtime && export DEBIAN_FRONTEND=noninteractive && sudo apt-get install -y tzdata && sudo dpkg-reconfigure --frontend noninteractive tzdata
            sudo apt-get -y install software-properties-common && sudo add-apt-repository ppa:deadsnakes/ppa && sudo apt-get -y update
            sudo apt install -y python3 python3-pip python3-venv && python3 -m venv venv38 && source venv38/bin/activate
            python3 -m pip install --upgrade pip
            python3 --version
            uname -m
            sudo apt-get -y install make
            sudo apt-get -y install autoconf automake build-essential cmake libtool mercurial pkg-config
            sudo apt-get install libglib2.0-dev -y
            sudo apt-get install llvm-dev -y
            sudo apt-get install libpq-dev -y libxml2-dev -y libxslt1-dev -y python3-dev -y
            sudo apt-get install python-dev -y
            sudo apt-get install tachyon -y
            python3 setup.py install
            python3 -m pip install meson
            python3 -m pip install pytest ninja
            export MESON_UNIT_TEST_BACKEND=ninja
    - run: ./run_unittests.py
      
  test_arm64: 
     runs-on: ubuntu-latest
     strategy:
      matrix:
        python-version: [ 3.8]
      fail-fast: false
     steps:
      - uses: actions/checkout@v2
      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v1
      - name: Install and Run tests
        run: |
               docker run --rm -v ${{ github.workspace }}:/ws:rw --workdir=/ws \
               arm64v8/ubuntu:20.04 \
               bash -exc 'apt-get update && apt-get -y install python3.8 curl git && \
                ln -fs /usr/share/zoneinfo/America/New_York /etc/localtime && export DEBIAN_FRONTEND=noninteractive && apt-get install -y tzdata && dpkg-reconfigure --frontend noninteractive tzdata && \
                apt-get -y install software-properties-common && add-apt-repository ppa:deadsnakes/ppa && apt-get -y update && \
                apt install -y python3 python3-pip python3-venv && python3 -m venv venv38 && source venv38/bin/activate && \
                python3 -m pip install --upgrade pip && \
                python3 --version && \
                uname -m && \
                apt-get -y install make && \
                apt-get -y install autoconf automake build-essential cmake libtool mercurial pkg-config && \
                apt-get install libglib2.0-dev -y && \
                apt-get install llvm-dev -y && \
                apt-get install libpq-dev -y libxml2-dev -y libxslt1-dev -y python3-dev -y && \
                apt-get install python-dev -y && \
                apt-get install tachyon -y && \
                python3 setup.py install && \
                python3 -m pip install meson && \
                python3 -m pip install pytest ninja && \
                export MESON_UNIT_TEST_BACKEND=ninja && \
                ./run_unittests.py && \
                deactivate'
